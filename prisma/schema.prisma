generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Plan {
  FREE
  PRO
}

model User {
  id              String          @id @default(cuid())
  externalId      String?         @unique
  quotaLimit      Int
  plan            Plan            @default(FREE)
  email           String          @unique
  apiKey          String          @unique @default(cuid())
  discordId       String?
  createAt        DateTime        @default(now())
  updateAt        DateTime        @updatedAt
  EventCategories EventCategory[]
  Event           Event[]
  Quota           Quota[]

  @@index([email, apiKey])
}

model EventCategory {
  id        String   @id @default(cuid())
  name      String
  color     Int
  emoji     String
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Event     Event[]

  @@unique([name, userId])
}

enum DeliveryStatus {
  PENDING
  SUCCESS
  FAILED
}

model Event {
  id               String         @id @default(cuid())
  formattedMessage String
  user             User           @relation(fields: [userId], references: [id])
  userId           String
  name             String
  fields           Json
  deliveryStatus   DeliveryStatus @default(PENDING)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  EventCategory    EventCategory? @relation(fields: [eventCategoryId], references: [id])
  eventCategoryId  String?

  @@index([createdAt])
}

model Quota {
  id        String   @id @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  year      Int
  month     Int
  count     Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
